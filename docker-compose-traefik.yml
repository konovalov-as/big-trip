services:
  mongodb:
    image: mongo
    container_name: 'mongo-db'
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - mongodb:/data/db

  mongo-express:
    image: mongo-express
    container_name: 'mongo-admin-ui'
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongodb:27017/
      ME_CONFIG_SITE_BASEURL: /mongo-express
    labels:
      - traefik.enable=true
      - traefik.http.routers.mongo.rule=Host(`simplemanx9.metrosg.ru`) && PathPrefix(`/mongo-express`)
      - traefik.http.routers.mongo.entrypoints=https
      - traefik.http.services.mongo-express.loadbalancer.server.port=8081
    depends_on:
      - mongodb

  frontend:
    build:
      dockerfile: Dockerfile.prod
      context: ./frontend
    image: big-trip-frontend
    container_name: big-trip-frontend
    restart: unless-stopped
    command: serve -s dist -l 3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`simplemanx9.metrosg.ru`)
      - traefik.http.routers.frontend.entrypoints=https
      - traefik.http.services.frontend.loadbalancer.server.port=3000
    depends_on:
      - api

  api:
    build: ./backend
    image: big-trip-api
    container_name: big-trip-api
    command: npm run start
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://api_db:27017/api
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
      - ME_CONFIG_MONGODB_URL=mongodb://root:example@api_db:27017/
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`simplemanx9.metrosg.ru`) && (PathPrefix(`/api`) || PathPrefix(`/static`) || PathPrefix(`/swagger`))
      - traefik.http.routers.api.entrypoints=https
      - traefik.http.routers.api.middlewares=auth-header
      - traefik.http.services.api.loadbalancer.server.port=9000
    depends_on:
      - mongodb

  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--providers.docker"
      - "--log.level=DEBUG"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=big-trip-network"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.https.http.tls.certResolver=le"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=simplemanx8@gmail.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"

    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik-dashboard.rule=Host(`simplemanx9.metrosg.ru`) && PathPrefix(`/traefik`)
      - traefik.http.routers.traefik-dashboard.entrypoints=https
      - traefik.http.routers.traefik-dashboard.service=api@internal
      - traefik.http.routers.traefik-dashboard.middlewares=traefik-strip,auth-header,auth
      # Middleware to strip prefix for dashboard
      - traefik.http.middlewares.traefik-strip.stripprefix.prefixes=/traefik
      # Middleware to set custom Authorization header
      - traefik.http.middlewares.auth-header.headers.customrequestheaders.Basic-Authorization="Basic qwerty123"
      # Basic Authentication middleware (optional)
      - traefik.http.middlewares.auth.basicauth.users=simpleman:$$apr1$$KaRYjcFS$$tXZ1vO3e5dN/geBW5HPpa.
      - traefik.http.routers.traefik-dashboard.tls.certResolver=le

    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt

volumes:
  mongodb:

networks:
  default:
    name: big-trip-network
    external: true
